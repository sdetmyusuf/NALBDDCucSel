<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-05T07:11:00 PDT" name="Default suite" finished-at="2023-08-05T07:11:02 PDT" duration-ms="1974">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-08-05T07:11:00 PDT" name="Default test" finished-at="2023-08-05T07:11:02 PDT" duration-ms="1974">
      <class name="testrunner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:00 PDT" name="setUpClass" finished-at="2023-08-05T07:11:02 PDT" duration-ms="1203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4d8539de]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="235" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login data from excel"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login with excel sheet"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at steps.LoginNALcuc.click_on_login(LoginNALcuc.java:87)
at ✽.click on login(file:///C:/Users/Mohd%20Yusuf/codeRepository/NALCucSelBDD/NALBDDCucSel/src/test/resource/features/LoginDataFromExcel.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="32" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login data from excel"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login with excel sheet"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1067)
at org.testng.Assert.assertEquals(Assert.java:1031)
at org.testng.Assert.assertEquals(Assert.java:1077)
at steps.LoginNALcuc.click_on_login(LoginNALcuc.java:87)
at ✽.click on login(file:///C:/Users/Mohd%20Yusuf/codeRepository/NALCucSelBDD/NALBDDCucSel/src/test/resource/features/LoginDataFromExcel.feature:7)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="36" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid email address and invalid password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with invalid email address and valid password"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login without providing credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register with mandatory fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register with all fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register without entering data into any fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-05T07:11:02 PDT" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Register with duplicate email address"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User Registration"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testrunner.TestRunner@57a78e3]" started-at="2023-08-05T07:11:02 PDT" name="tearDownClass" finished-at="2023-08-05T07:11:02 PDT" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testrunner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
